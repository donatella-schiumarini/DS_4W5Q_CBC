the scripts hbDataFrame and hb_Analysis, python 3 .ipynb files, have been developed to read the .log and .xpm files obtained by the gmx hbond gromacs command and to make the hydrogen bond analysis, for the following systems: A protein-RNA, B protein-MEO, C protein-H2O, D RNA-MEO, E RNA-H2O,  F mRNA-miRNA, G Ago_domain1-Ago_domain2. The work directory is the data (.log, .xpm files) directory. 

The former script just translates the .log file created by gmx hbond gromacs command into a DataFrame and stores it in a .csv file.
The DataFrame columns report for each bonds the donor residue names and numbers, the acceptor residue names and numbers in the correct order to be read from the hb_Analysis.ipynb script; also it presents the basic information about the number of hbonds for the system considered, the relative list of donor and acceptor residue couples.
The script asks as input the .log file directory and the .log file name to be read, the kind system (A,B,C,D,E,F,G) the .log file is concerned with.
The final dataframe columns are the orginal donor, hydrogen, acceptor entry of the .log file and then separately, D_resname, D_resnum, A_resname, A_resnum: the 'Auto' column entry is set to 0 (otherwise 1) if the hydrogen bond presents same residue as donor and as acceptor: kind column entry is set to m(mi) if the  system includes mRNA(miRNA); in the case F (mRNA-miRNA h-bonds), kind column is set to m(mi) if the donor residue behave to mRNA(miRNA).

the h-bond analysis coded into the second script basically intends to highlights relations among the constitutive parts of the system by a parsing process of the collected gromacs hbond data and proceeds trough seven steps.
step I: Initialization
step II: Occupancy computation based on the .xpm file of the system under study and evaluation of its global hbond network strength;
step III: hbond presentation by descending occupancy values, h-bonds separation into occupancy interval groups, occupancy distribution histograms. 
step IV: the hbond population is analyzed by its distribution over protein residues:  distinct ranges of occupancy can be chosen and their different incidence over protein residues can be graphically compared: by default the sets are the h-bond set with occupancy from .4 to 0.75, from .75 to 0.9 and from .9 to 1.0. This step makes no sense for cases D, E and F.
step V: the hbond population is analyzed by its distribution over protein domains. The maximum occupancy value supported by domains, the total occupancy (equivalent hydrogen bond number/frame) and average occupancy (total occupancy for domain-on-domain total h-bond number) are produced. Again, this step makes no sense for cases D, E and F. 
step VI: the h-bond population is analyzed by its distribution over mRNA and miRNA residue number: histogram of  maximum occupancy supported by  nucleotides, total occupancy for nucleotide and the average occupancy (total occupancy for nucleotide on nucleotide total h-bond number) are produced. This step makes no sense for cases B and C.
step VII:  hydrogen bonds can be selected by residue name, together by residue name and number and their evolution with time can be graphed and compared.  
The steps II to VII, then excluded the fundamental initialization and occupancy computation steps I and II, are independent and it is possible to make cycles on them re-assigning new parameters. 
The program asks for the working directory that is the directory where must be located both the .xpm and relative .csv file produced by hbDataFrame.ipynb: the program must be instructed on the initial frame time of the .xpm frame sequence, the final frame time and the step time to be considered in the h-bond time evolution plotting. Histogram sections require interval limits to be declared. The user is asked also to initialize a note file and to assign a figure directory.  
